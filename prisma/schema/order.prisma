model Order {
  id               String              @id @default(uuid())
  storeId          String
  store            Store               @relation("StoreToOrder", fields: [storeId], references: [id])
  customerId       String?
  customer         Customer?           @relation("CustomerToOrder", fields: [customerId], references: [id])
  orderItems       OrderItem[]
  isPaid           Boolean             @default(false)
  phone            String              @default("")
  address          String              @default("")
  status           String              @default("cart") // cart, processing, shipped, completed, cancelled
  createdAt        DateTime            @default(now())
  updatedAt        DateTime            @default(now())
  promotions       Promotion[]         @relation("OrderToPromotion")
  orderPromotions  OrderPromotion[]
  emailDiscount    Decimal             @default(0)
  customerDiscount Decimal             @default(0)
  couponDiscount   Decimal             @default(0)
  totalAmount      Decimal             @default(0)
  finalAmount      Decimal             @default(0)
  statusHistory    OrderStatusHistory[]
  stockMovements   StockMovement[]

  @@index([storeId])
  @@index([customerId])
}

model OrderStatusHistory {
  id             String   @id @default(uuid())
  orderId        String
  order          Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  status         String
  reason         String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  originatorId   String?
  originatorType String   @default("system")

  @@index([orderId])
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  variantId String
  variant   Variant  @relation(fields: [variantId], references: [id])
  quantity  Int      @default(1)
  price     Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([orderId])
  @@index([variantId])
}
