model Order {
  id             String          @id @default(uuid())
  storeId        String
  store          Store           @relation("StoreToOrder", fields: [storeId], references: [id])
  customerId     String?
  customer       Customer?       @relation("CustomerToOrder", fields: [customerId], references: [id])
  orderItems     OrderItem[]
  isPaid         Boolean         @default(false)
  phone          String          @default("")
  address        String          @default("")
  status         String          @default("cart") // cart, pending, processing, completed, cancelled
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @default(now())

  @@index([storeId])
  @@index([customerId])
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  variantId String
  variant   Variant  @relation(fields: [variantId], references: [id])
  quantity  Int      @default(1)
  price     Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([orderId])
  @@index([variantId])
}

model Customer {
  id        String          @id @default(uuid())
  storeId   String
  store     Store           @relation("StoreToCustomer", fields: [storeId], references: [id])
  orders    Order[]         @relation("CustomerToOrder")
  name      String
  email     String
  password  String
  phone     String?
  addresses Address[]
  reviews   ProductReview[]
  createdAt DateTime        @default(now())
  updatedAt DateTime        @default(now())

  @@unique([email, storeId])
  @@index([storeId])
}

model Address {
  id         String   @id @default(uuid())
  customerId String
  customer   Customer @relation(fields: [customerId], references: [id])
  type       String
  street     String
  city       String
  state      String
  postalCode String
  country    String
  isDefault  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())

  @@index([customerId])
}

model User {
  id        String   @id @default(uuid())
  name      String?
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
