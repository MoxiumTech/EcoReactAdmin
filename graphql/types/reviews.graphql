type ProductReview {
  id: String!
  productId: String!
  product: Product!
  customerId: String!
  customer: Customer!
  rating: Int!
  title: String
  content: String!
  status: ReviewStatus!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum ReviewStatus {
  PENDING
  APPROVED
  REJECTED
}

input ProductReviewCreateInput {
  productId: String!
  customerId: String!
  rating: Int!
  title: String
  content: String!
}

input ProductReviewUpdateInput {
  rating: Int
  title: String
  content: String
  status: ReviewStatus
}

input ReviewFilter {
  productId: String
  customerId: String
  status: ReviewStatus
}

type Query {
  reviews(storeId: String!, filter: ReviewFilter): [ProductReview!]!
  review(id: String!, storeId: String!): ProductReview
}

type Mutation {
  createReview(storeId: String!, input: ProductReviewCreateInput!): ProductReview!
  updateReviewStatus(id: String!, storeId: String!, status: ReviewStatus!): ProductReview!
  deleteReview(id: String!, storeId: String!): Boolean!
}