type StockItem {
  id: String!
  variantId: String!
  variant: Variant!
  storeId: String!
  store: Store!
  count: Int!
  stockStatus: StockStatus!
  reserved: Int!
  backorderedQty: Int!
  stockMovements: [StockMovement!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type StockMovement {
  id: String!
  variantId: String!
  variant: Variant!
  stockItemId: String!
  stockItem: StockItem!
  quantity: Int!
  type: StockMovementType!
  reason: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Size {
  id: String!
  storeId: String!
  store: Store!
  name: String!
  value: String!
  variants: [Variant!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Color {
  id: String!
  storeId: String!
  store: Store!
  name: String!
  value: String!
  variants: [Variant!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input StockItemCreateInput {
  variantId: String!
  count: Int!
}

input StockItemUpdateInput {
  count: Int!
}

input StockMovementCreateInput {
  stockItemId: String!
  type: StockMovementType!
  quantity: Int!
  reason: String
}

input StockMovementFilter {
  stockItemId: String
  type: StockMovementType
}

input SizeCreateInput {
  name: String!
  value: String!
}

input SizeUpdateInput {
  name: String
  value: String
}

input ColorCreateInput {
  name: String!
  value: String!
}

input ColorUpdateInput {
  name: String
  value: String
}

enum StockStatus {
  IN_STOCK
  LOW_STOCK
  OUT_OF_STOCK
}

enum StockMovementType {
  INCREMENT
  DECREMENT
  ADJUSTMENT
}

type Query {
  stockItems(storeId: String!, variantId: String): [StockItem!]!
  stockItem(id: String!, storeId: String!): StockItem
  
  stockMovements(storeId: String!, filter: StockMovementFilter): [StockMovement!]!
  stockMovement(id: String!, storeId: String!): StockMovement
  
  sizes(storeId: String!): [Size!]!
  size(id: String!, storeId: String!): Size
  
  colors(storeId: String!): [Color!]!
  color(id: String!, storeId: String!): Color
}

type Mutation {
  createStockItem(storeId: String!, input: StockItemCreateInput!): StockItem!
  updateStockItem(id: String!, storeId: String!, input: StockItemUpdateInput!): StockItem!
  deleteStockItem(id: String!, storeId: String!): Boolean!
  adjustStockItemCount(id: String!, storeId: String!, adjustment: Int!): StockItem!
  
  createStockMovement(storeId: String!, input: StockMovementCreateInput!): StockMovement!
  
  createSize(storeId: String!, input: SizeCreateInput!): Size!
  updateSize(id: String!, storeId: String!, input: SizeUpdateInput!): Size!
  deleteSize(id: String!, storeId: String!): Boolean!
  
  createColor(storeId: String!, input: ColorCreateInput!): Color!
  updateColor(id: String!, storeId: String!, input: ColorUpdateInput!): Color!
  deleteColor(id: String!, storeId: String!): Boolean!
}