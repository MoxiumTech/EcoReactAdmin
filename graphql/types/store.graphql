type Store {
  id: String!
  name: String!
  userId: String!
  currency: String
  locale: String
  domain: String
  themeSettings: JSON
  customCss: String
  logoUrl: String
  faviconUrl: String
  billboards: [Billboard!]
  products: [Product!]
  sizes: [Size!]
  colors: [Color!]
  orders: [Order!]
  customers: [Customer!]
  taxonomies: [Taxonomy!]
  stockItems: [StockItem!]
  createdAt: DateTime!
  updatedAt: DateTime!
  brands: [Brand!]
  suppliers: [Supplier!]
  attributes: [Attribute!]
  attributeValues: [AttributeValue!]
  optionTypes: [OptionType!]
  homeLayouts: [HomeLayout!]
  _count: StoreCount
}

type StoreCount {
  products: Int!
  billboards: Int!
  customers: Int!
}

type Query {
  stores: [Store!]!
  store(id: String!): Store
  storeByDomain(domain: String!): Store
}

type Mutation {
  createStore(input: StoreCreateInput!): Store!
  updateStore(id: String!, input: StoreUpdateInput!): Store!
  deleteStore(id: String!): Boolean!
}

input StoreCreateInput {
  name: String!
  currency: String
  locale: String
}

input StoreUpdateInput {
  name: String
  currency: String
  locale: String
  domain: String
  themeSettings: JSON
  customCss: String
  logoUrl: String
  faviconUrl: String
}